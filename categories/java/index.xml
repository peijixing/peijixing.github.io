<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on 老裴的个人博客</title>
    <link>http://localhost:1313/categories/java/</link>
    <description>Recent content in java on 老裴的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 06 Feb 2023 09:04:10 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>序列化和反序列化</title>
      <link>http://localhost:1313/post/java/%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link>
      <pubDate>Mon, 06 Feb 2023 09:04:10 +0800</pubDate>
      
      <guid>http://localhost:1313/post/java/%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid>
      <description>什么是序列化和反序列化? 如果我们需要持久化 Java 对象比如将 Java 对象保存在文件中，或者在网络传输 Java 对象，这些场景都需要用到序列化。 简单来说： 序列化：</description>
    </item>
    
    <item>
      <title>权限修饰符</title>
      <link>http://localhost:1313/post/java/%E6%9D%83%E9%99%90%E4%BF%AE%E9%A5%B0%E7%AC%A6/</link>
      <pubDate>Mon, 06 Feb 2023 08:53:30 +0800</pubDate>
      
      <guid>http://localhost:1313/post/java/%E6%9D%83%E9%99%90%E4%BF%AE%E9%A5%B0%E7%AC%A6/</guid>
      <description>final 关键字 final 关键字，意思是最终的、不可修改的，最见不得变化 ，用来修饰类、方法和变量，具有以下特点： final 修饰的类不能被继承，final 类中的所有成</description>
    </item>
    
    <item>
      <title>Bigdecimal</title>
      <link>http://localhost:1313/post/java/bigdecimal/</link>
      <pubDate>Mon, 06 Feb 2023 08:46:57 +0800</pubDate>
      
      <guid>http://localhost:1313/post/java/bigdecimal/</guid>
      <description>《阿里巴巴 Java 开发手册》中提到：“为了避免精度丢失，可以使用 BigDecimal 来进行浮点数的运算”。 浮点数的运算竟然还会有精度丢失的风险吗？确实会！ 示例代码：</description>
    </item>
    
  </channel>
</rss>
